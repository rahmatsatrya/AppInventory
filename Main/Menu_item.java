/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Main;


import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import javax.swing.Action;
import javax.swing.Icon;
import javax.swing.ImageIcon;

/**
 *
 * @author alams
 */
public class Menu_item extends javax.swing.JPanel {

    private boolean isActive;

    /**
     * @return the subMenu
     */
    public ArrayList<Menu_item> getSubMenu() {
        return subMenu;
    }

    /**
     * Creates new form Menu_item
     */
    
    private final ArrayList<Menu_item>subMenu = new ArrayList<>();
    
    private ActionListener act;
    
    
    public Menu_item(Icon icon, boolean sbm, Icon iconSub, Icon iconDrop, String menuName, ActionListener act, Menu_item... subMenu) {
        initComponents();
        
        
        
        lb_icon.setIcon(icon);
        lb_drop.setIcon(iconDrop);
        lb_menuName.setText(menuName);
        lb_iconSub.setIcon(iconSub);
        lb_iconSub.setVisible(sbm);
        
        if (act != null){
            this.act = act;
        }
        this.setSize(new Dimension(Integer.MAX_VALUE,45));
        this.setMaximumSize(new Dimension(Integer.MAX_VALUE,45));
        this.setMinimumSize(new Dimension(Integer.MAX_VALUE,45));
        for (int i = 0; i<subMenu.length; i++){
            this.subMenu.add(subMenu[i]);
            subMenu[i].setVisible(false);
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lb_menuName = new javax.swing.JLabel();
        lb_icon = new javax.swing.JLabel();
        lb_iconSub = new javax.swing.JLabel();
        lb_drop = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
        });

        lb_menuName.setBackground(new java.awt.Color(255, 255, 255));
        lb_menuName.setFont(new java.awt.Font("Dubai", 0, 14)); // NOI18N
        lb_menuName.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_menuName.setText("Menu item");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(lb_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_iconSub, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_menuName, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lb_drop, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(14, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lb_menuName, javax.swing.GroupLayout.DEFAULT_SIZE, 37, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lb_drop, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_icon, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_iconSub, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
    }// </editor-fold>//GEN-END:initComponents

    private boolean showing = false;
    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        ImageIcon dropUp = new ImageIcon(getClass().getResource("/Icon/drop-up.png"));
        ImageIcon dropDown = new ImageIcon(getClass().getResource("/Icon/drop-down.png"));
        if (showing) {
            if (lb_menuName.getText().equals("Home")) { //jika klik home maka icon tidak ditampilkan
                lb_drop.setIcon(null);
            } else {
                lb_drop.setIcon(dropDown);
            }
            hideMenu();
        } else {
            if (lb_menuName.getText().equals("Home")) { //jika klik home maka icon tidak ditampilkan
                lb_drop.setIcon(null);
            } else {
                lb_drop.setIcon(dropUp);
            }
            showMenu();
        }
        
        if (act != null){
            act.actionPerformed(null);
        }
        
    }//GEN-LAST:event_formMousePressed
    void setActive(boolean active) {
        this.isActive = active;
        if (active) {
            setBackground(new Color(255, 104, 102)); // Change to active color
        } else {
            setBackground(new Color(246, 226, 165)); // Revert to default color
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel lb_drop;
    private javax.swing.JLabel lb_icon;
    private javax.swing.JLabel lb_iconSub;
    private javax.swing.JLabel lb_menuName;
    // End of variables declaration//GEN-END:variables

    private void showMenu() {
    // Make sure the submenu's visibility is controlled without affecting the parent layout
    new Thread(new Runnable() {
        @Override
        public void run(){
        for (int i = 0; i < subMenu.size(); i++) {
            sleep();
            // Using a layout manager that does not resize the parent component
            subMenu.get(i).setVisible(true);
        }
        showing = true;
        getParent().repaint();
        getParent().revalidate();
        }
    }).start();
    
}

    private void hideMenu() {
        new Thread(new Runnable() {
        @Override
        public void run(){
        for (int i = subMenu.size()-1; i >= 0; i--) {
                sleep();
                // Using a layout manager that does not resize the parent component
                subMenu.get(i).setVisible(false);
                subMenu.get(i).hideMenu();
            }
            getParent().repaint();
            getParent().revalidate();
            showing = false;
        }
        }).start();
    }

    
    private void sleep(){
        try {
            Thread.sleep(20);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}

