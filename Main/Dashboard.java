/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import Main.content_bg;
import View.Laporan_Barang;
import View.Laporan_BarangKeluar;
import View.Laporan_BarangMasuk;
import View.Laporan_Pemesanan;
import View.Master_Barang;
import View.Master_Distributor;
import View.Master_JenisBarang;
import View.Master_Pengguna;
import View.Menu_setting;
import View.Transaksi_BarangKeluar;
import View.Transaksi_BarangMasuk;
import View.Transaksi_Pemesanan;
import java.awt.Image;
import java.awt.Point;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.sql.SQLException;
import java.util.ArrayList;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import java.util.Date;
import java.text.SimpleDateFormat;
import javax.swing.SwingUtilities;
import javax.swing.Timer;
import model.model_login;
import java.util.Locale; // konversi hari ke bahasa indo
import javax.swing.JPanel;

/**
 *
 * @author alams
 */
public class Dashboard extends javax.swing.JFrame {
    
    private model_login modelLogin;
    private Menu_item currentActiveMenu = null;
    public Dashboard(model_login modelLogin) throws SQLException {
        
        // membuat timer dengan delay 1ms untuk memperbarui lebel
        Timer timer = new Timer(1000, new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                updateTime();
            }
        });
        timer.start();
        
        initComponents();
        this.setExtendedState(JFrame.MAXIMIZED_BOTH);
        
        lb_nama.setText(modelLogin.getNama_pengguna()); // label nama
        lb_level.setText(modelLogin.getLevel()); // label level
        lb_id.setText(modelLogin.getId_user());
        lb_id.setVisible(false);
        
        
        try{
                // konversi blob gambar ke imageicon
                byte[] img = modelLogin.getGambar().getBytes(1, (int) modelLogin.getGambar().length());
                ImageIcon imageIcon = new ImageIcon(img);
                
                // ukuran Jlabel
                int labelWidth = 200;
                int labelHeight = 130;
                
                // ukuran gambar asli
                int imageWidth = imageIcon.getIconWidth();
                int imageHeight = imageIcon.getIconHeight();
                
                // hitung skala untuk ukuran gambar yang baru
                double scaleX = (double) labelWidth / (double) imageWidth;
                double scaleY = (double) labelHeight / (double) imageHeight;
                double scale = Math.min(scaleY, scaleY);
                
                // ubah ukuran gambar dengan skala yang sudah dihitung
                Image scaledImage = imageIcon.getImage().getScaledInstance((int) (scale * imageWidth), (int)(scale * imageHeight), Image.SCALE_SMOOTH);
                
                // tampilkan imageicon pada Jlabel
                lb_gambar.setIcon(new ImageIcon(scaledImage));
            } catch (SQLException e){
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE,null,e);
            }
        
        execute(modelLogin);
        
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pn_navbar = new javax.swing.JPanel();
        lb_id = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        lb_tanggal = new javax.swing.JLabel();
        btn_setting = new javax.swing.JButton();
        pn_sidebar = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        pn_menus = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        lb_gambar = new javax.swing.JLabel();
        lb_nama = new javax.swing.JLabel();
        lb_level = new javax.swing.JLabel();
        lb_level1 = new javax.swing.JLabel();
        lb_level2 = new javax.swing.JLabel();
        pn_content = new javax.swing.JPanel();
        pn_utama = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        pn_navbar.setBackground(new java.awt.Color(51, 153, 255));
        pn_navbar.setPreferredSize(new java.awt.Dimension(1006, 70));

        lb_id.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_id.setText("ID");

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 0, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel1.setText("  Inventory");

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel2.setText("App");

        jPanel2.setBackground(new java.awt.Color(51, 153, 255));

        lb_tanggal.setFont(new java.awt.Font("Segoe UI Semibold", 0, 14)); // NOI18N
        lb_tanggal.setForeground(new java.awt.Color(255, 255, 255));
        lb_tanggal.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_tanggal.setText("Tanggal dan waktu");

        btn_setting.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/settings.png"))); // NOI18N
        btn_setting.setToolTipText("");
        btn_setting.setBorder(null);
        btn_setting.setBorderPainted(false);
        btn_setting.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btn_setting.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                btn_settingFocusLost(evt);
            }
        });
        btn_setting.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_settingActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap(35, Short.MAX_VALUE)
                .addComponent(lb_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_setting)
                .addGap(20, 20, 20))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lb_tanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btn_setting))
                .addGap(0, 8, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_navbarLayout = new javax.swing.GroupLayout(pn_navbar);
        pn_navbar.setLayout(pn_navbarLayout);
        pn_navbarLayout.setHorizontalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 384, Short.MAX_VALUE)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_navbarLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(lb_id, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        pn_navbarLayout.setVerticalGroup(
            pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(pn_navbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addContainerGap())
            .addGroup(pn_navbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_id)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(pn_navbar, java.awt.BorderLayout.PAGE_START);

        pn_sidebar.setBackground(new java.awt.Color(255, 255, 255));
        pn_sidebar.setPreferredSize(new java.awt.Dimension(250, 495));

        jScrollPane1.setBorder(null);

        pn_menus.setBackground(new java.awt.Color(255, 255, 255));
        pn_menus.setLayout(new javax.swing.BoxLayout(pn_menus, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane1.setViewportView(pn_menus);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        lb_gambar.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lb_gambar.setPreferredSize(new java.awt.Dimension(100, 300));

        lb_nama.setFont(new java.awt.Font("Microsoft Sans Serif", 1, 12)); // NOI18N
        lb_nama.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_nama.setText("Nama");

        lb_level.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        lb_level.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_level.setText("Level");

        lb_level1.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        lb_level1.setForeground(new java.awt.Color(255, 255, 255));
        lb_level1.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lb_level1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icon/shop.png"))); // NOI18N

        lb_level2.setFont(new java.awt.Font("Microsoft Sans Serif", 0, 12)); // NOI18N
        lb_level2.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lb_level2.setText("Online");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lb_gambar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(lb_nama, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                        .addComponent(lb_level, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lb_level1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_level2, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lb_gambar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lb_nama, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lb_level, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lb_level1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lb_level2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout pn_sidebarLayout = new javax.swing.GroupLayout(pn_sidebar);
        pn_sidebar.setLayout(pn_sidebarLayout);
        pn_sidebarLayout.setHorizontalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pn_sidebarLayout.createSequentialGroup()
                .addGroup(pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pn_sidebarLayout.setVerticalGroup(
            pn_sidebarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_sidebarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 657, Short.MAX_VALUE)
                .addContainerGap())
        );

        getContentPane().add(pn_sidebar, java.awt.BorderLayout.LINE_START);

        pn_content.setBackground(new java.awt.Color(253, 253, 244));

        pn_utama.setBackground(new java.awt.Color(253, 253, 242));
        pn_utama.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                pn_utamaMousePressed(evt);
            }
        });
        pn_utama.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout pn_contentLayout = new javax.swing.GroupLayout(pn_content);
        pn_content.setLayout(pn_contentLayout);
        pn_contentLayout.setHorizontalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pn_contentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pn_utama, javax.swing.GroupLayout.DEFAULT_SIZE, 612, Short.MAX_VALUE))
        );
        pn_contentLayout.setVerticalGroup(
            pn_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pn_utama, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 790, Short.MAX_VALUE)
        );

        getContentPane().add(pn_content, java.awt.BorderLayout.CENTER);

        setSize(new java.awt.Dimension(882, 867));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pn_utama.add(new content_bg());
        pn_utama.repaint();
        pn_utama.revalidate();
    }//GEN-LAST:event_formWindowOpened

    private void btn_settingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_settingActionPerformed
       // membuat instance JDialog
       Menu_setting menu = new Menu_setting(this,true,this);
       
       
       // menampilkan jDialog di bwh button setting
        Point p = btn_setting.getLocationOnScreen();
        int x = p.x + btn_setting.getWidth() - menu.getWidth();
        int y = p.y + btn_setting.getHeight();
        menu.setLocation(x,y);
        menu.setVisible(true);
    }//GEN-LAST:event_btn_settingActionPerformed

    private void btn_settingFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_btn_settingFocusLost
        
    }//GEN-LAST:event_btn_settingFocusLost

    private void pn_utamaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_utamaMousePressed

    }//GEN-LAST:event_pn_utamaMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dashboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                model_login Modellogin = new model_login();
                try {
                    new Dashboard(Modellogin).setVisible(true);
                } catch (SQLException ex) {
                    Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
                }
                
            }
            
        });
        
        // merefresh waktu
        SwingUtilities.invokeLater(() -> {
            model_login ModelLogin = new model_login();
            try {
                new Dashboard(ModelLogin); // Gantilah dengan nama kelas Anda yang sesuai
            } catch (SQLException ex) {
                Logger.getLogger(Dashboard.class.getName()).log(Level.SEVERE, null, ex);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_setting;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lb_gambar;
    private javax.swing.JLabel lb_id;
    private javax.swing.JLabel lb_level;
    private javax.swing.JLabel lb_level1;
    private javax.swing.JLabel lb_level2;
    private javax.swing.JLabel lb_nama;
    private javax.swing.JLabel lb_tanggal;
    private javax.swing.JPanel pn_content;
    private javax.swing.JPanel pn_menus;
    private javax.swing.JPanel pn_navbar;
    private javax.swing.JPanel pn_sidebar;
    private javax.swing.JPanel pn_utama;
    // End of variables declaration//GEN-END:variables

    private void execute(model_login modelLogin) {
        ImageIcon iconHome = new ImageIcon(getClass().getResource("/Icon/home-button.png"));
        ImageIcon iconmaster = new ImageIcon(getClass().getResource("/Icon/folder.png"));
        ImageIcon iconBarang = new ImageIcon(getClass().getResource("/Icon/boxes.png"));
        ImageIcon iconjenisBarang = new ImageIcon(getClass().getResource("/Icon/action.png"));
        ImageIcon iconDistributor = new ImageIcon(getClass().getResource("/Icon/distribution.png"));
        ImageIcon iconUser = new ImageIcon(getClass().getResource("/Icon/person.png"));
        ImageIcon iconDrop = new ImageIcon(getClass().getResource("/Icon/drop-down.png"));
        ImageIcon iconTransaksi = new ImageIcon(getClass().getResource("/Icon/transaction.png"));
        ImageIcon iconReport = new ImageIcon(getClass().getResource("/Icon/report.png"));
        ImageIcon iconPemesanan = new ImageIcon(getClass().getResource("/Icon/order.png"));
        ImageIcon iconBarMas = new ImageIcon(getClass().getResource("/Icon/order-in.png"));
        ImageIcon iconBarKel = new ImageIcon(getClass().getResource("/Icon/order-out.png"));
        
        Menu_item subMenu1 = new Menu_item(null, true, iconBarang, null, "Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               pn_utama.add(new Master_Barang());
               pn_utama.repaint();
               pn_utama.validate();
            }
        });
        
        Menu_item subMenu2 = new Menu_item(null, true, iconjenisBarang, null, "Jenis Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               pn_utama.add(new Master_JenisBarang());
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item subMenu3 = new Menu_item(null, true, iconDistributor, null, "Distributor", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               pn_utama.add(new Master_Distributor());
               pn_utama.repaint();
               pn_utama.validate();
            }
        });
        
        Menu_item subMenu4 = new Menu_item(null, true, iconUser, null, "Pengguna", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               pn_utama.add(new Master_Pengguna());
               pn_utama.repaint();
               pn_utama.validate();
            }
        });
        
        Menu_item subTransaksi1 = new Menu_item(null, true, iconPemesanan, null, "Pemesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Transaksi_Pemesanan(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item subTransaksi2 = new Menu_item(null, true, iconBarMas, null, "Barang Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Transaksi_BarangMasuk(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item subTransaksi3 = new Menu_item(null, true, iconBarKel, null, "Barang Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Transaksi_BarangKeluar(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item laporanBarang = new Menu_item(null, true, iconBarang, null, "Barang", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Laporan_Barang(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item laporanPemesanan = new Menu_item(null, true, iconPemesanan, null, "Pemesanan", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Laporan_Pemesanan(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item laporanBarangMasuk = new Menu_item(null, true, iconBarMas, null, "Barang Masuk", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Laporan_BarangMasuk(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item laporanBarangKeluar = new Menu_item(null, true, iconBarKel, null, "Barang Keluar", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               String id = lb_id.getText();
               pn_utama.add(new Laporan_BarangKeluar(id));
               pn_utama.repaint();
               pn_utama.validate(); 
            }
        });
        
        Menu_item menuHome = new Menu_item(iconHome, false, null, null, "Home", new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
               pn_utama.removeAll();
               pn_utama.add(new content_bg());
               pn_utama.repaint();
               pn_utama.validate();
            }
        });
        
        Menu_item menuMaster = new Menu_item(iconmaster, false, null, iconDrop, "Master", null, subMenu1, subMenu2, subMenu3, subMenu4);
        Menu_item menuTransaksi = new Menu_item(iconTransaksi, false, null, iconDrop, "Transaction", null, subTransaksi1, subTransaksi2, subTransaksi3);
        
        Menu_item menuReport = new Menu_item(iconReport, false, null, iconDrop, "Report", null, laporanBarang, laporanPemesanan, laporanBarangMasuk, laporanBarangKeluar);

        if(modelLogin.getLevel().equals("Owner")){
            addMenu(menuHome,menuMaster,menuTransaksi,menuReport);   
        }else{
            addMenu(menuHome,menuTransaksi,menuReport);  
        }
    }
    
    private void menuClicked(ActionEvent evt) {

        if (currentActiveMenu != null) {
            currentActiveMenu.setActive(false); // Deactivate the previously active menu
        }
        Menu_item clickedMenu = (Menu_item) evt.getSource();
        clickedMenu.setActive(true); // Activate the clicked menu
        currentActiveMenu = clickedMenu; // Update the current active menu
    }

    
    private void addMenu(Menu_item... menu) {
    for (int i = 0; i<menu.length;i++) {
        pn_menus.add(menu[i]);
        ArrayList<Menu_item> subMenu = menu[i].getSubMenu();
        for (Menu_item sub : subMenu) {
            // Add submenu items to a dedicated panel or handle separately
            pn_menus.add(sub);
        }
    }
    pn_menus.revalidate();
}
    public JPanel getPn_utama(){ // akan dipanggil di kelas menu_setting
        return pn_utama;
    }

    private void updateTime() {
        Date tanggalSekarang = new Date();
        SimpleDateFormat tanggalWaktu = new SimpleDateFormat("EEEE, yyyy-MM-dd HH:mm:ss", Locale.ENGLISH); // Format yang mencakup hari, tanggal, bulan, tahun, dan waktu
        String date = tanggalWaktu.format(tanggalSekarang);
        
         // Konversi nama hari dan bulan ke bahasa Indonesia
        String tanggalIndo = convertToIndonesian(date);
        
        lb_tanggal.setText(tanggalIndo);
    }
    
    private String convertToIndonesian(String tanggalInggris) {
    // Daftar hari dalam bahasa Inggris
    String[] hariInggris = {"Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday", "Sunday"};
    // Daftar hari dalam bahasa Indonesia
    String[] hariIndonesia = {"Senin", "Selasa", "Rabu", "Kamis", "Jumat", "Sabtu", "Minggu"};
    
    // Mengganti hari
    for (int i = 0; i < hariInggris.length; i++) {
        tanggalInggris = tanggalInggris.replace(hariInggris[i], hariIndonesia[i]);
    }
        return tanggalInggris;
    }
    
    
}
    

 
